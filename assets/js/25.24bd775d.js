(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{376:function(t,n,i){"use strict";i.r(n);var s=i(7),e=Object(s.a)({},(function(){var t=this.$createElement,n=this._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("p",[this._v("Mixin 是为了解决多重继承提供的概念，这种设计允许使用这个类的方法而不需要继承它\nMixin 更像是 include 而不是 继承 的方式\n继承限制了抽象行为确实是符合继承的意义；而 Mixin 则是更加宽松，使用这个类只是需要里面的方法而已\n继承的思维方式像是根据模板造车子；Mixin则是先有各种部件，然后造出车子")]),this._v(" "),n("p",[this._v("Mixin更加符合现实")]),this._v(" "),n("p",[this._v("许多现代的框架，为了对开发者提供更加好的用户体验，都已经使用组合的方式，摒弃继承的方式\nReact鼓励使用组合和不是继承，并且发现它们编写的绝大部分组件根本就不需要继承\nJava 语言不支持多继承，取而代之的是使用接口编程，开发者可以使用组合模式编写代码")])])}),[],!1,null,null,null);n.default=e.exports}}]);