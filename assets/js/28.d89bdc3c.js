(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{378:function(t,a,s){"use strict";s.r(a);var e=s(7),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"我想要解决什么问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我想要解决什么问题"}},[t._v("#")]),t._v(" 我想要解决什么问题")]),t._v(" "),s("p",[t._v("想要在更深层次的角度了解vue，加入一些对比来阐述它是什么，它与别的web框架有什么区别；")]),t._v(" "),s("p",[t._v("想要知道它的特性具体是怎么实现的")]),t._v(" "),s("h2",{attrs:{id:"怎么了解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么了解"}},[t._v("#")]),t._v(" 怎么了解")]),t._v(" "),s("p",[t._v("一个整体框架图，各部件的数据流向；")]),t._v(" "),s("p",[t._v("了解整个生命周期；")]),t._v(" "),s("h2",{attrs:{id:"如何实现双向绑定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何实现双向绑定"}},[t._v("#")]),t._v(" 如何实现双向绑定")]),t._v(" "),s("p",[t._v("这部分研究参考：剖析vue实现原理，自己动手实现mvvm")]),t._v(" "),s("ul",[s("li",[t._v("实现一个数据监听器Observer，能够对所有属性修改监听，如有变动通知订阅者")]),t._v(" "),s("li",[t._v("实现一个命令解析器Compile，")]),t._v(" "),s("li",[t._v("扫描每一个元素节点和解析，")]),t._v(" "),s("li",[t._v("根据指令模板替换数据，以及绑定相应的更新函数")]),t._v(" "),s("li",[t._v("实现一个Watcher，作为连接Observer和Compile的桥梁，能够订阅并收到每个属性变动的通知，执行指令绑定的相应回调函数")]),t._v(" "),s("li",[t._v("mvvm入口函数，整合以上三者")])]),t._v(" "),s("h2",{attrs:{id:"实现compile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现compile"}},[t._v("#")]),t._v(" 实现Compile")]),t._v(" "),s("p",[t._v("解析模板指令，将模板中的变量替换成数据")]),t._v(" "),s("p",[t._v("初始化渲染页面视图")]),t._v(" "),s("p",[t._v("并将每个指令对应的节点绑定更新函数")]),t._v(" "),s("p",[t._v("添加监听数据的订阅者，一旦数据有变动，收到通知，更新视图")]),t._v(" "),s("h2",{attrs:{id:"实现watcher"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现watcher"}},[t._v("#")]),t._v(" 实现Watcher")]),t._v(" "),s("p",[t._v("在自身实例化时往属性订阅器(dep)里面添加自己")]),t._v(" "),s("p",[t._v("自身必须有一个update()方法")]),t._v(" "),s("p",[t._v("待属性变动dep.notice()通知时，能调用自身的update()方法，并触发Compile中绑定的回调")]),t._v(" "),s("h2",{attrs:{id:"官方解释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#官方解释"}},[t._v("#")]),t._v(" 官方解释")]),t._v(" "),s("p",[t._v("这部分研究参考 vue文档-内在-深入响应式原理")]),t._v(" "),s("h2",{attrs:{id:"如何追踪变化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何追踪变化"}},[t._v("#")]),t._v(" 如何追踪变化")]),t._v(" "),s("p",[t._v("Vue 依靠Object.definedProperty劫持对象属性变化，Object.defineProperty 是 ES5 中一个无法 shim 的特性，这也就是 Vue 不支持 IE8 以及更低版本浏览器的原因；")]),t._v(" "),s("p",[s("strong",[t._v("检测变化的注意事项")]),t._v("\n受现代 JavaScript 的限制 (而且 Object.observe 也已经被废弃)，Vue 无法检测到对象属性的添加或删除。")]),t._v(" "),s("p",[t._v("Vue会在初始化实例的时候将仅 data 对象上面的属性转为响应式的；")]),t._v(" "),s("p",[t._v("特殊的需要动态添加响应式的情况，参考列表渲染")]),t._v(" "),s("p",[s("strong",[t._v("异步更新队列")]),t._v("\n监听到数据变化之后，watcher并不会马上通知渲染，而是把请求放入到队列中，")]),t._v(" "),s("p",[t._v("这样做可以防止组件中的一个函数多次频繁渲染（比如for循环中更新响应式数据）；")]),t._v(" "),s("p",[t._v("这是一种数据驱动的编码范式，通常情况下是对性能是最友好的；")]),t._v(" "),s("p",[t._v("在数据与视图渲染频繁交错的情况，比如说下一步的数据处理等待着渲染的完成，这时候可以使用")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("Vue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$nextTick \nvm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new message'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更改数据")]),t._v("\nvm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textContent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new message'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nVue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  vm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textContent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new message'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"更加深入的研究"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更加深入的研究"}},[t._v("#")]),t._v(" 更加深入的研究")]),t._v(" "),s("p",[t._v("这部分研究参考 "),s("code",[t._v("leanVue")]),t._v("；")]),t._v(" "),s("p",[t._v("解析 vue2 diff 算法；")]),t._v(" "),s("p",[t._v("Vue中的diff算法？")]),t._v(" "),s("p",[t._v("Higher Order Components in Vue.js = HOC")]),t._v(" "),s("h2",{attrs:{id:"dom-树-diff-patch-策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom-树-diff-patch-策略"}},[t._v("#")]),t._v(" Dom 树 diff patch 策略")]),t._v(" "),s("p",[t._v("Vue更新节点的策略是先diff，再做patch;")]),t._v(" "),s("p",[t._v("只做同级的比较;")]),t._v(" "),s("p",[t._v("分为是否有子节点两种情况，处理子节点的过程是diff算法的核心")]),t._v(" "),s("p",[t._v("diff算法本质就是对两个数组找差异，主要用到的方法是首尾两端对比和key索引。")]),t._v(" "),s("h3",{attrs:{id:"首尾两端对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#首尾两端对比"}},[t._v("#")]),t._v(" 首尾两端对比")]),t._v(" "),s("p",[t._v("重点在于几种异常的处理")]),t._v(" "),s("h3",{attrs:{id:"key的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#key的作用"}},[t._v("#")]),t._v(" key的作用")]),t._v(" "),s("p",[t._v("key的作用主要是为了高效的更新虚拟DOM；")]),t._v(" "),s("p",[t._v("createKeyToOldIdx 复制制作 key-index 的字典；")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createKeyToOldIdx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" beginIdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" endIdx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" beginIdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" endIdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isDef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" map\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);